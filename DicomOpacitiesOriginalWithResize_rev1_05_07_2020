{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.3"},"colab":{"name":"DicomOpacitiesOriginalWithResize_rev1_05_07_2020","provenance":[],"collapsed_sections":[],"toc_visible":true,"machine_shape":"hm"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"MNkZrE8gbmED","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947265606,"user_tz":-330,"elapsed":7328,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["# Install packages that are not available by default in google colab\n","!pip install -q pydicom"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"8J2MnBEJby3U","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593947269927,"user_tz":-330,"elapsed":11622,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"cbbb9e51-c173-4517-fd1a-6f92b71f1e22"},"source":["!pip install pydicom\n","import matplotlib.pyplot as plt"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: pydicom in /usr/local/lib/python3.6/dist-packages (2.0.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"cXtEDS4tm1XZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593947273692,"user_tz":-330,"elapsed":15344,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"46998521-8acc-4a6d-91b0-aaea3fe81926"},"source":["pip install dicom"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: dicom in /usr/local/lib/python3.6/dist-packages (0.9.9.post1)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LuBkSNVgIWq9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593947278013,"user_tz":-330,"elapsed":19625,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"7ab43f7d-c2ac-4509-88f5-8e62f06e2674"},"source":["pip install --trusted-host pypi.python.org --upgrade pip"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Requirement already up-to-date: pip in /usr/local/lib/python3.6/dist-packages (20.1.1)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"uZd4Y_Q9WAI1","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"executionInfo":{"status":"ok","timestamp":1593947278620,"user_tz":-330,"elapsed":20211,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"81898089-ae24-4865-9cba-4b0f47c8540a"},"source":["import numpy as np\n","import pandas as pd\n","import pydicom as npydicom\n","from PIL import Image\n","import matplotlib.pyplot as plt\n","import os\n","import csv\n","from csv import writer\n","from tqdm import tqdm\n","#import tryy\n","import cv2\n","import pydicom\n","#import random\n","#import pydicom as dicomio\n","from os.path import join  \n","import dicom \n","import numpy"],"execution_count":5,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/dicom/__init__.py:53: UserWarning: \n","This code is using an older version of pydicom, which is no longer \n","maintained as of Jan 2017.  You can access the new pydicom features and API \n","by installing `pydicom` from PyPI.\n","See 'Transitioning to pydicom 1.x' section at pydicom.readthedocs.org \n","for more information.\n","\n","  warnings.warn(msg)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"0V3UYNKrx9vL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":54},"executionInfo":{"status":"ok","timestamp":1593947278622,"user_tz":-330,"elapsed":20149,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"be97cd16-51f3-4d70-f36b-612eadfe8f5e"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ZTPEcSJRw-uG","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947278623,"user_tz":-330,"elapsed":20113,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["Capstone_Project_Path= \"/content/drive/My Drive/Colab Notebooks/Capstone Project:- Pneumonia /data from Akshay/\""],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"V668yf9AWAJ1","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947278624,"user_tz":-330,"elapsed":20092,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["#paths on pc\n","train_dir = r'/content/drive/My Drive/Colab Notebooks/Capstone Project:- Pneumonia /data from Akshay/stage_2_train_images/'\n","#folder_path = r'/content/drive/My Drive/Colab Notebooks/Capstone Project:- Pneumonia /data from Akshay/stage_2_train_images'\n","#imgs = os.listdir(folder_path)"],"execution_count":8,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"OzWZau4KSsTF","colab_type":"text"},"source":["##**EDA**##"]},{"cell_type":"code","metadata":{"id":"-H3tYG3iaYUR","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":88},"executionInfo":{"status":"ok","timestamp":1593947280174,"user_tz":-330,"elapsed":21621,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"cfbe6883-9856-44f5-c0a7-83ea6eedf0d9"},"source":["import pandas\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","%cd {Capstone_Project_Path}\n","\n","\n","class_1= pd.read_csv('stage_2_detailed_class_info.csv')"],"execution_count":9,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"],"name":"stderr"},{"output_type":"stream","text":["/content/drive/My Drive/Colab Notebooks/Capstone Project:- Pneumonia /data from Akshay\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-C-VJvkQ-Tjm","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1593947280175,"user_tz":-330,"elapsed":21604,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"d2ece230-b7c4-4871-98f6-5bfa01bf4029"},"source":["class_1.head()"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>patientId</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0004cfab-14fd-4e49-80ba-63a80b6bddd6</td>\n","      <td>No Lung Opacity / Not Normal</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>00313ee0-9eaa-42f4-b0ab-c148ed3241cd</td>\n","      <td>No Lung Opacity / Not Normal</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>00322d4d-1c29-4943-afc9-b6754be640eb</td>\n","      <td>No Lung Opacity / Not Normal</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>003d8fa0-6bf1-40ed-b54c-ac657f8495c5</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>00436515-870c-4b36-a041-de91049b9ab4</td>\n","      <td>Lung Opacity</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                              patientId                         class\n","0  0004cfab-14fd-4e49-80ba-63a80b6bddd6  No Lung Opacity / Not Normal\n","1  00313ee0-9eaa-42f4-b0ab-c148ed3241cd  No Lung Opacity / Not Normal\n","2  00322d4d-1c29-4943-afc9-b6754be640eb  No Lung Opacity / Not Normal\n","3  003d8fa0-6bf1-40ed-b54c-ac657f8495c5                        Normal\n","4  00436515-870c-4b36-a041-de91049b9ab4                  Lung Opacity"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"Um4HDZh5-yaQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593947280177,"user_tz":-330,"elapsed":21565,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"e1607c10-31fc-4a95-c01f-90dfec9547ff"},"source":["class_1.shape"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(30227, 2)"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"GfHxGpNU85aL","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947281691,"user_tz":-330,"elapsed":23035,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["train_label=pd.read_csv(Capstone_Project_Path +'stage_2_train_labels.csv')"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"b0xwQ8HF-8FD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1593947281692,"user_tz":-330,"elapsed":23018,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"eae4b532-cecb-4484-e2be-54e360edc223"},"source":["train_label.head()"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>patientId</th>\n","      <th>x</th>\n","      <th>y</th>\n","      <th>width</th>\n","      <th>height</th>\n","      <th>Target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0004cfab-14fd-4e49-80ba-63a80b6bddd6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>00313ee0-9eaa-42f4-b0ab-c148ed3241cd</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>00322d4d-1c29-4943-afc9-b6754be640eb</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>003d8fa0-6bf1-40ed-b54c-ac657f8495c5</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>00436515-870c-4b36-a041-de91049b9ab4</td>\n","      <td>264.0</td>\n","      <td>152.0</td>\n","      <td>213.0</td>\n","      <td>379.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                              patientId      x      y  width  height  Target\n","0  0004cfab-14fd-4e49-80ba-63a80b6bddd6    NaN    NaN    NaN     NaN       0\n","1  00313ee0-9eaa-42f4-b0ab-c148ed3241cd    NaN    NaN    NaN     NaN       0\n","2  00322d4d-1c29-4943-afc9-b6754be640eb    NaN    NaN    NaN     NaN       0\n","3  003d8fa0-6bf1-40ed-b54c-ac657f8495c5    NaN    NaN    NaN     NaN       0\n","4  00436515-870c-4b36-a041-de91049b9ab4  264.0  152.0  213.0   379.0       1"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"GWTkr8Vv-8dv","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593947281694,"user_tz":-330,"elapsed":22990,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"a7d70267-97f1-4b2c-e89d-2db5397b1d74"},"source":["train_label.shape"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(30227, 6)"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"SgqwYvfIaaD4","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947281695,"user_tz":-330,"elapsed":22967,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["#missing values\n","def check_data(dataframe):\n","  print('\\nIs NA:\\n',dataframe.isna().sum())\n","  print('\\nUnique Patients:\\n',len(dataframe['patientId'].unique()))\n"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"z-C5hxYVmN5-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":357},"executionInfo":{"status":"ok","timestamp":1593947281695,"user_tz":-330,"elapsed":22947,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"1a7daefb-ce7e-4fba-9b6b-185afcb79d95"},"source":["check_data(class_1)\n","check_data(train_label)"],"execution_count":16,"outputs":[{"output_type":"stream","text":["\n","Is NA:\n"," patientId    0\n","class        0\n","dtype: int64\n","\n","Unique Patients:\n"," 26684\n","\n","Is NA:\n"," patientId        0\n","x            20672\n","y            20672\n","width        20672\n","height       20672\n","Target           0\n","dtype: int64\n","\n","Unique Patients:\n"," 26684\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Y-gJHlDgALlU","colab_type":"text"},"source":["**Above data imples that for 20.6K patients x & y values are missing** \n","\n"," **Above data have 26.6K unique patients data**\n"]},{"cell_type":"code","metadata":{"id":"mJRZ5cehR6ve","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947281696,"user_tz":-330,"elapsed":22920,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["class_1_train_label_integrating = train_label.merge(class_1, left_on='patientId', right_on='patientId', how='inner')"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"eDuPiUO9TKIm","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1593947281696,"user_tz":-330,"elapsed":22873,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"8b836404-b97c-4fff-c4fb-8a972e0f4fd8"},"source":["class_1_train_label_integrating.head()"],"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>patientId</th>\n","      <th>x</th>\n","      <th>y</th>\n","      <th>width</th>\n","      <th>height</th>\n","      <th>Target</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0004cfab-14fd-4e49-80ba-63a80b6bddd6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>No Lung Opacity / Not Normal</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>00313ee0-9eaa-42f4-b0ab-c148ed3241cd</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>No Lung Opacity / Not Normal</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>00322d4d-1c29-4943-afc9-b6754be640eb</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>No Lung Opacity / Not Normal</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>003d8fa0-6bf1-40ed-b54c-ac657f8495c5</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>00436515-870c-4b36-a041-de91049b9ab4</td>\n","      <td>264.0</td>\n","      <td>152.0</td>\n","      <td>213.0</td>\n","      <td>379.0</td>\n","      <td>1</td>\n","      <td>Lung Opacity</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                              patientId  ...                         class\n","0  0004cfab-14fd-4e49-80ba-63a80b6bddd6  ...  No Lung Opacity / Not Normal\n","1  00313ee0-9eaa-42f4-b0ab-c148ed3241cd  ...  No Lung Opacity / Not Normal\n","2  00322d4d-1c29-4943-afc9-b6754be640eb  ...  No Lung Opacity / Not Normal\n","3  003d8fa0-6bf1-40ed-b54c-ac657f8495c5  ...                        Normal\n","4  00436515-870c-4b36-a041-de91049b9ab4  ...                  Lung Opacity\n","\n","[5 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"dZioZ8TGTKO_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"ok","timestamp":1593947281697,"user_tz":-330,"elapsed":22835,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"de7c0907-bbed-432f-d67b-589255446d4c"},"source":["check_data(class_1_train_label_integrating)"],"execution_count":19,"outputs":[{"output_type":"stream","text":["\n","Is NA:\n"," patientId        0\n","x            20672\n","y            20672\n","width        20672\n","height       20672\n","Target           0\n","class            0\n","dtype: int64\n","\n","Unique Patients:\n"," 26684\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YhEOPfaRTKSc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"executionInfo":{"status":"ok","timestamp":1593947281698,"user_tz":-330,"elapsed":22800,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"0049d96f-72cb-4efc-8097-472224475ae0"},"source":["print(class_1_train_label_integrating[class_1_train_label_integrating['Target'] == 0].isna().sum())"],"execution_count":20,"outputs":[{"output_type":"stream","text":["patientId        0\n","x            20672\n","y            20672\n","width        20672\n","height       20672\n","Target           0\n","class            0\n","dtype: int64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"8oPi-aQkUuuB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"executionInfo":{"status":"ok","timestamp":1593947281698,"user_tz":-330,"elapsed":22759,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"e01dfe41-ce6d-44d9-d44e-8c74efcec7d8"},"source":["print(class_1_train_label_integrating[class_1_train_label_integrating['class'] == 'Normal'].isna().sum())"],"execution_count":21,"outputs":[{"output_type":"stream","text":["patientId       0\n","x            8851\n","y            8851\n","width        8851\n","height       8851\n","Target          0\n","class           0\n","dtype: int64\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"3etl6kZTmblA","colab_type":"text"},"source":["There are total 8851 missing values for Normal class"]},{"cell_type":"code","metadata":{"id":"gEQBtP8Rmth-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"executionInfo":{"status":"ok","timestamp":1593947281699,"user_tz":-330,"elapsed":22722,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"e6206b8a-b8fb-4017-d376-5eb0a0fe50a9"},"source":["print(class_1_train_label_integrating[class_1_train_label_integrating['class'] == 'No Lung Opacity / Not Normal'].isna().sum())"],"execution_count":22,"outputs":[{"output_type":"stream","text":["patientId        0\n","x            11821\n","y            11821\n","width        11821\n","height       11821\n","Target           0\n","class            0\n","dtype: int64\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"dhtMXsqKm4K6","colab_type":"text"},"source":["There are total 11821 missing values for No Lung Opacity / Not Normal class"]},{"cell_type":"code","metadata":{"id":"CwdjjHnRnMSb","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"executionInfo":{"status":"ok","timestamp":1593947281699,"user_tz":-330,"elapsed":22679,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"ecec8f6d-d3bc-4a54-81d6-56c2cde49e71"},"source":["print(class_1_train_label_integrating[class_1_train_label_integrating['class'] == 'Lung Opacity'].isna().sum())"],"execution_count":23,"outputs":[{"output_type":"stream","text":["patientId    0\n","x            0\n","y            0\n","width        0\n","height       0\n","Target       0\n","class        0\n","dtype: int64\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"bwbXW-TAoHKQ","colab_type":"text"},"source":["There are no missing values for Lung Opacity class"]},{"cell_type":"code","metadata":{"id":"ronByDKtnM2l","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947281700,"user_tz":-330,"elapsed":22629,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["sns.set_style(\"dark\")"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"id":"uncKrKArpmWS","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":296},"executionInfo":{"status":"ok","timestamp":1593947281700,"user_tz":-330,"elapsed":22611,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"258224cd-16db-4b58-a2ff-9aeb23b6d3c9"},"source":["sns.countplot(train_label['Target'])\n"],"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f3d62c0f128>"]},"metadata":{"tags":[]},"execution_count":25},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"dBGf4lIhqshi","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593947281701,"user_tz":-330,"elapsed":22580,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"d6ccd9e2-a9fa-4592-fe5e-a22b224d1720"},"source":["train_label['Target'].count()"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["30227"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"zeFJ-DWexzCZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":142},"executionInfo":{"status":"ok","timestamp":1593947281701,"user_tz":-330,"elapsed":22542,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"b83c0f5b-d7fa-4048-edf5-32edc12dcc0b"},"source":["train_label.groupby(['Target']).count() "],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>patientId</th>\n","      <th>x</th>\n","      <th>y</th>\n","      <th>width</th>\n","      <th>height</th>\n","    </tr>\n","    <tr>\n","      <th>Target</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20672</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>9555</td>\n","      <td>9555</td>\n","      <td>9555</td>\n","      <td>9555</td>\n","      <td>9555</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        patientId     x     y  width  height\n","Target                                      \n","0           20672     0     0      0       0\n","1            9555  9555  9555   9555    9555"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"nVoqFS7twuPN","colab_type":"text"},"source":["From total patients data of 30227, 9555 patients are having Lung opacity"]},{"cell_type":"code","metadata":{"id":"GMFHj3M743VA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":301},"executionInfo":{"status":"ok","timestamp":1593947281702,"user_tz":-330,"elapsed":22514,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"73d4d06a-58e3-4d2c-9983-756e71d75eaa"},"source":["# Bifurcation of Target & Class\n","fig = plt.figure(figsize = (10, 6))\n","ax = fig.add_subplot(121)\n","g = (train_label['Target'].value_counts()\n","    .plot(kind = 'pie', autopct = '%.0f%%', \n","          labels = ['Negative', 'Pneumonia Proofs'], \n","          colors = ['green', 'red'], \n","          startangle = 90, \n","          title = 'Bifurcation of Target', fontsize = 12)\n","    .set_ylabel(''))"],"execution_count":28,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x432 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"_n-X70Zbmev6","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":297},"executionInfo":{"status":"ok","timestamp":1593947281703,"user_tz":-330,"elapsed":22496,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"1745d850-0a98-44f3-c97d-7dde22ce8481"},"source":["ax = fig.add_subplot(122)\n","g = (class_1['class'].value_counts().sort_index(ascending = False)\n","    .plot(kind = 'pie', autopct = '%.0f%%', \n","          colors = ['green', 'yellow', 'red'], \n","          startangle = 90, title = 'Bifurcation of Class', \n","          fontsize = 12)\n","    .set_ylabel(''))\n","plt.tight_layout()"],"execution_count":29,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"rAx3awGI7pDw","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947282308,"user_tz":-330,"elapsed":23072,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["sample_sub=pd.read_csv(Capstone_Project_Path +'stage_2_sample_submission.csv')                                          "],"execution_count":30,"outputs":[]},{"cell_type":"code","metadata":{"id":"XRn2BidQ7548","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1593947282310,"user_tz":-330,"elapsed":23052,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"9746bb39-42cf-4017-f5f5-629233bf2461"},"source":["sample_sub.head()"],"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>patientId</th>\n","      <th>PredictionString</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0000a175-0e68-4ca4-b1af-167204a7e0bc</td>\n","      <td>0.5 0 0 100 100</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0005d3cc-3c3f-40b9-93c3-46231c3eb813</td>\n","      <td>0.5 0 0 100 100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>000686d7-f4fc-448d-97a0-44fa9c5d3aa6</td>\n","      <td>0.5 0 0 100 100</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>000e3a7d-c0ca-4349-bb26-5af2d8993c3d</td>\n","      <td>0.5 0 0 100 100</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>00100a24-854d-423d-a092-edcf6179e061</td>\n","      <td>0.5 0 0 100 100</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                              patientId PredictionString\n","0  0000a175-0e68-4ca4-b1af-167204a7e0bc  0.5 0 0 100 100\n","1  0005d3cc-3c3f-40b9-93c3-46231c3eb813  0.5 0 0 100 100\n","2  000686d7-f4fc-448d-97a0-44fa9c5d3aa6  0.5 0 0 100 100\n","3  000e3a7d-c0ca-4349-bb26-5af2d8993c3d  0.5 0 0 100 100\n","4  00100a24-854d-423d-a092-edcf6179e061  0.5 0 0 100 100"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"id":"TUl9TM3j43Yq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593947282311,"user_tz":-330,"elapsed":23031,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"78c45691-44f6-4bc8-cf2b-5300ed169909"},"source":["print('PatientId is linked with {} class'.format(class_1.groupby(['patientId'])['class'].nunique().max()))"],"execution_count":32,"outputs":[{"output_type":"stream","text":["PatientId is linked with 1 class\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"PrIHbJLvlVhJ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"ok","timestamp":1593947282312,"user_tz":-330,"elapsed":23004,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"8f03ea63-04b6-4e12-9643-7d86cbd2a32e"},"source":["boundingboxes = train_label.groupby('patientId').size().to_frame('number_of_boxes').reset_index()\n","train_label = train_label.merge(boundingboxes, on = 'patientId', how = 'right')\n","print('\\nNumber of patientIDs per boundingboxes in the dataset')\n","(boundingboxes.groupby('number_of_boxes')\n",".size()\n",".to_frame('number_of_patientIDs_per_boxes')\n",".reset_index()\n",".set_index('number_of_boxes')\n",".sort_values(by = 'number_of_boxes'))"],"execution_count":33,"outputs":[{"output_type":"stream","text":["\n","Number of patientIDs per boundingboxes in the dataset\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>number_of_patientIDs_per_boxes</th>\n","    </tr>\n","    <tr>\n","      <th>number_of_boxes</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>23286</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3266</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>119</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 number_of_patientIDs_per_boxes\n","number_of_boxes                                \n","1                                         23286\n","2                                          3266\n","3                                           119\n","4                                            13"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"markdown","metadata":{"id":"T3LVtvcCodFe","colab_type":"text"},"source":["### Summarization from CSV\n","1. Out of 30227 patient IDs, 26684 patients are having unique IDs. This means that remaining are duplicates.\n","2. As per our understanding, CSV data has patient IDs and Bounding boxes.\n","3. Class variable contains No Lung Opacity/Not Normal, Normal and Lung Opacity.\n","4. Out of Given patient data, 32% people have Pneumonia Proofs/Symptoms."]},{"cell_type":"code","metadata":{"id":"lLgvm58AskUK","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947282313,"user_tz":-330,"elapsed":22978,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["import pydicom as dcm\n","import codecs"],"execution_count":34,"outputs":[]},{"cell_type":"code","metadata":{"id":"k6_LNAT6m1T1","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947282314,"user_tz":-330,"elapsed":22961,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["sample_patient_id = train_label['patientId'][1]\n","dcm_file = train_dir + '{}.dcm'.format(sample_patient_id)"],"execution_count":35,"outputs":[]},{"cell_type":"code","metadata":{"id":"XxP39gA9zHqk","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947282315,"user_tz":-330,"elapsed":22949,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["dcm_data = dcm.read_file(dcm_file)"],"execution_count":36,"outputs":[]},{"cell_type":"code","metadata":{"id":"7uUQ0CjUzOTO","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":765},"executionInfo":{"status":"ok","timestamp":1593947282316,"user_tz":-330,"elapsed":22935,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"901849fe-c38e-4651-cf86-cdb24476c5f1"},"source":["print(dcm_data)"],"execution_count":37,"outputs":[{"output_type":"stream","text":["Dataset.file_meta -------------------------------\n","(0002, 0000) File Meta Information Group Length  UL: 200\n","(0002, 0001) File Meta Information Version       OB: b'\\x00\\x01'\n","(0002, 0002) Media Storage SOP Class UID         UI: Secondary Capture Image Storage\n","(0002, 0003) Media Storage SOP Instance UID      UI: 1.2.276.0.7230010.3.1.4.8323329.26024.1517874469.23011\n","(0002, 0010) Transfer Syntax UID                 UI: JPEG Baseline (Process 1)\n","(0002, 0012) Implementation Class UID            UI: 1.2.276.0.7230010.3.0.3.6.0\n","(0002, 0013) Implementation Version Name         SH: 'OFFIS_DCMTK_360'\n","-------------------------------------------------\n","(0008, 0005) Specific Character Set              CS: 'ISO_IR 100'\n","(0008, 0016) SOP Class UID                       UI: Secondary Capture Image Storage\n","(0008, 0018) SOP Instance UID                    UI: 1.2.276.0.7230010.3.1.4.8323329.26024.1517874469.23011\n","(0008, 0020) Study Date                          DA: '19010101'\n","(0008, 0030) Study Time                          TM: '000000.00'\n","(0008, 0050) Accession Number                    SH: ''\n","(0008, 0060) Modality                            CS: 'CR'\n","(0008, 0064) Conversion Type                     CS: 'WSD'\n","(0008, 0090) Referring Physician's Name          PN: ''\n","(0008, 103e) Series Description                  LO: 'view: PA'\n","(0010, 0010) Patient's Name                      PN: '00313ee0-9eaa-42f4-b0ab-c148ed3241cd'\n","(0010, 0020) Patient ID                          LO: '00313ee0-9eaa-42f4-b0ab-c148ed3241cd'\n","(0010, 0030) Patient's Birth Date                DA: ''\n","(0010, 0040) Patient's Sex                       CS: 'F'\n","(0010, 1010) Patient's Age                       AS: '48'\n","(0018, 0015) Body Part Examined                  CS: 'CHEST'\n","(0018, 5101) View Position                       CS: 'PA'\n","(0020, 000d) Study Instance UID                  UI: 1.2.276.0.7230010.3.1.2.8323329.26024.1517874469.23010\n","(0020, 000e) Series Instance UID                 UI: 1.2.276.0.7230010.3.1.3.8323329.26024.1517874469.23009\n","(0020, 0010) Study ID                            SH: ''\n","(0020, 0011) Series Number                       IS: \"1\"\n","(0020, 0013) Instance Number                     IS: \"1\"\n","(0020, 0020) Patient Orientation                 CS: ''\n","(0028, 0002) Samples per Pixel                   US: 1\n","(0028, 0004) Photometric Interpretation          CS: 'MONOCHROME2'\n","(0028, 0010) Rows                                US: 1024\n","(0028, 0011) Columns                             US: 1024\n","(0028, 0030) Pixel Spacing                       DS: [0.19431099999999998, 0.19431099999999998]\n","(0028, 0100) Bits Allocated                      US: 8\n","(0028, 0101) Bits Stored                         US: 8\n","(0028, 0102) High Bit                            US: 7\n","(0028, 0103) Pixel Representation                US: 0\n","(0028, 2110) Lossy Image Compression             CS: '01'\n","(0028, 2114) Lossy Image Compression Method      CS: 'ISO_10918_1'\n","(7fe0, 0010) Pixel Data                          OB: Array of 111474 elements\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vr0qKQuxzbey","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947282317,"user_tz":-330,"elapsed":22911,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["def load_image(imagename):\n","  image1 = pydicom.dcmread(imagename)\n","  print(type(image1))\n","  return image1"],"execution_count":38,"outputs":[]},{"cell_type":"code","metadata":{"id":"Re8VWGo4zbiM","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947282318,"user_tz":-330,"elapsed":22898,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["#import numpy as np\n","#data = np.load('resized_train_images.npy', allow_pickle=True)"],"execution_count":39,"outputs":[]},{"cell_type":"code","metadata":{"id":"m07wSp7wdKIk","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947282319,"user_tz":-330,"elapsed":22879,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["import matplotlib.pyplot as plt \n","%matplotlib inline \n","import seaborn as sns \n","import csv\n","from glob import glob\n","import sys\n","#csv.field_size_limit(sys.maxsize)\n","import ctypes as ct"],"execution_count":40,"outputs":[]},{"cell_type":"code","metadata":{"id":"Smo76VAkJw3a","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947282320,"user_tz":-330,"elapsed":22872,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":["#b = pd.read_csv(Capstone_Project_Path +'new.csv')"],"execution_count":41,"outputs":[]},{"cell_type":"code","metadata":{"id":"wNmfsVXwOsq8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":71},"executionInfo":{"status":"ok","timestamp":1593947541567,"user_tz":-330,"elapsed":282108,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"5c59fd45-3e2b-4503-c914-da8f8b7e63a7"},"source":["path = \"/content/drive/My Drive/Colab Notebooks/Capstone Project:- Pneumonia /data from Akshay/new.csv\"\n","b = pd.read_csv(path)"],"execution_count":42,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py:2718: DtypeWarning: Columns (0,1,2,4,6,7,8,11,12,15,19,21,22,25,28,30,31,33) have mixed types.Specify dtype option on import or set low_memory=False.\n","  interactivity=interactivity, compiler=compiler, result=result)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"InJ_NWxBV1vY","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":479},"executionInfo":{"status":"ok","timestamp":1593947541571,"user_tz":-330,"elapsed":282101,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"371da3a7-7731-443e-ee76-48f2eb54b023"},"source":["b.head()"],"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AccessionNumber</th>\n","      <th>BitsAllocated</th>\n","      <th>BitsStored</th>\n","      <th>BodyPartExamined</th>\n","      <th>Columns</th>\n","      <th>ConversionType</th>\n","      <th>HighBit</th>\n","      <th>InstanceNumber</th>\n","      <th>LossyImageCompression</th>\n","      <th>LossyImageCompressionMethod</th>\n","      <th>Modality</th>\n","      <th>PatientAge</th>\n","      <th>PatientBirthDate</th>\n","      <th>PatientID</th>\n","      <th>PatientName</th>\n","      <th>PatientOrientation</th>\n","      <th>PatientSex</th>\n","      <th>PhotometricInterpretation</th>\n","      <th>PixelData</th>\n","      <th>PixelRepresentation</th>\n","      <th>PixelSpacing</th>\n","      <th>ReferringPhysicianName</th>\n","      <th>Rows</th>\n","      <th>SOPClassUID</th>\n","      <th>SOPInstanceUID</th>\n","      <th>SamplesPerPixel</th>\n","      <th>SeriesDescription</th>\n","      <th>SeriesInstanceUID</th>\n","      <th>SeriesNumber</th>\n","      <th>SpecificCharacterSet</th>\n","      <th>StudyDate</th>\n","      <th>StudyID</th>\n","      <th>StudyInstanceUID</th>\n","      <th>StudyTime</th>\n","      <th>ViewPosition</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>CHEST</td>\n","      <td>1024</td>\n","      <td>WSD</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>ISO_10918_1</td>\n","      <td>CR</td>\n","      <td>51</td>\n","      <td>NaN</td>\n","      <td>0004cfab-14fd-4e49-80ba-63a80b6bddd6</td>\n","      <td>0004cfab-14fd-4e49-80ba-63a80b6bddd6</td>\n","      <td>NaN</td>\n","      <td>F</td>\n","      <td>MONOCHROME2</td>\n","      <td>b'\\xfe\\xff\\x00\\xe0\\x00\\x00\\x00\\x00\\xfe\\xff\\x00...</td>\n","      <td>0</td>\n","      <td>[0.14300000000000002, 0.14300000000000002]</td>\n","      <td>NaN</td>\n","      <td>1024</td>\n","      <td>1.2.840.10008.5.1.4.1.1.7</td>\n","      <td>1.2.276.0.7230010.3.1.4.8323329.28530.15178744...</td>\n","      <td>1</td>\n","      <td>view: PA</td>\n","      <td>1.2.276.0.7230010.3.1.3.8323329.28530.15178744...</td>\n","      <td>1</td>\n","      <td>ISO_IR 100</td>\n","      <td>19010101</td>\n","      <td>NaN</td>\n","      <td>1.2.276.0.7230010.3.1.2.8323329.28530.15178744...</td>\n","      <td>0</td>\n","      <td>PA</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>CHEST</td>\n","      <td>1024</td>\n","      <td>WSD</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>ISO_10918_1</td>\n","      <td>CR</td>\n","      <td>19</td>\n","      <td>NaN</td>\n","      <td>000924cf-0f8d-42bd-9158-1af53881a557</td>\n","      <td>000924cf-0f8d-42bd-9158-1af53881a557</td>\n","      <td>NaN</td>\n","      <td>F</td>\n","      <td>MONOCHROME2</td>\n","      <td>b'\\xfe\\xff\\x00\\xe0\\x00\\x00\\x00\\x00\\xfe\\xff\\x00...</td>\n","      <td>0</td>\n","      <td>[0.139, 0.139]</td>\n","      <td>NaN</td>\n","      <td>1024</td>\n","      <td>1.2.840.10008.5.1.4.1.1.7</td>\n","      <td>1.2.276.0.7230010.3.1.4.8323329.20023.15178744...</td>\n","      <td>1</td>\n","      <td>view: AP</td>\n","      <td>1.2.276.0.7230010.3.1.3.8323329.20023.15178744...</td>\n","      <td>1</td>\n","      <td>ISO_IR 100</td>\n","      <td>19010101</td>\n","      <td>NaN</td>\n","      <td>1.2.276.0.7230010.3.1.2.8323329.20023.15178744...</td>\n","      <td>0</td>\n","      <td>AP</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>CHEST</td>\n","      <td>1024</td>\n","      <td>WSD</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>ISO_10918_1</td>\n","      <td>CR</td>\n","      <td>25</td>\n","      <td>NaN</td>\n","      <td>000db696-cf54-4385-b10b-6b16fbb3f985</td>\n","      <td>000db696-cf54-4385-b10b-6b16fbb3f985</td>\n","      <td>NaN</td>\n","      <td>F</td>\n","      <td>MONOCHROME2</td>\n","      <td>b'\\xfe\\xff\\x00\\xe0\\x00\\x00\\x00\\x00\\xfe\\xff\\x00...</td>\n","      <td>0</td>\n","      <td>[0.168, 0.168]</td>\n","      <td>NaN</td>\n","      <td>1024</td>\n","      <td>1.2.840.10008.5.1.4.1.1.7</td>\n","      <td>1.2.276.0.7230010.3.1.4.8323329.4475.151787430...</td>\n","      <td>1</td>\n","      <td>view: AP</td>\n","      <td>1.2.276.0.7230010.3.1.3.8323329.4475.151787430...</td>\n","      <td>1</td>\n","      <td>ISO_IR 100</td>\n","      <td>19010101</td>\n","      <td>NaN</td>\n","      <td>1.2.276.0.7230010.3.1.2.8323329.4475.151787430...</td>\n","      <td>0</td>\n","      <td>AP</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>CHEST</td>\n","      <td>1024</td>\n","      <td>WSD</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>ISO_10918_1</td>\n","      <td>CR</td>\n","      <td>40</td>\n","      <td>NaN</td>\n","      <td>000fe35a-2649-43d4-b027-e67796d412e0</td>\n","      <td>000fe35a-2649-43d4-b027-e67796d412e0</td>\n","      <td>NaN</td>\n","      <td>M</td>\n","      <td>MONOCHROME2</td>\n","      <td>b'\\xfe\\xff\\x00\\xe0\\x00\\x00\\x00\\x00\\xfe\\xff\\x00...</td>\n","      <td>0</td>\n","      <td>[0.171, 0.171]</td>\n","      <td>NaN</td>\n","      <td>1024</td>\n","      <td>1.2.840.10008.5.1.4.1.1.7</td>\n","      <td>1.2.276.0.7230010.3.1.4.8323329.25090.15178744...</td>\n","      <td>1</td>\n","      <td>view: AP</td>\n","      <td>1.2.276.0.7230010.3.1.3.8323329.25090.15178744...</td>\n","      <td>1</td>\n","      <td>ISO_IR 100</td>\n","      <td>19010101</td>\n","      <td>NaN</td>\n","      <td>1.2.276.0.7230010.3.1.2.8323329.25090.15178744...</td>\n","      <td>0</td>\n","      <td>AP</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>CHEST</td>\n","      <td>1024</td>\n","      <td>WSD</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>ISO_10918_1</td>\n","      <td>CR</td>\n","      <td>57</td>\n","      <td>NaN</td>\n","      <td>001031d9-f904-4a23-b3e5-2c088acd19c6</td>\n","      <td>001031d9-f904-4a23-b3e5-2c088acd19c6</td>\n","      <td>NaN</td>\n","      <td>M</td>\n","      <td>MONOCHROME2</td>\n","      <td>b'\\xfe\\xff\\x00\\xe0\\x00\\x00\\x00\\x00\\xfe\\xff\\x00...</td>\n","      <td>0</td>\n","      <td>[0.139, 0.139]</td>\n","      <td>NaN</td>\n","      <td>1024</td>\n","      <td>1.2.840.10008.5.1.4.1.1.7</td>\n","      <td>1.2.276.0.7230010.3.1.4.8323329.9271.151787434...</td>\n","      <td>1</td>\n","      <td>view: PA</td>\n","      <td>1.2.276.0.7230010.3.1.3.8323329.9271.151787434...</td>\n","      <td>1</td>\n","      <td>ISO_IR 100</td>\n","      <td>19010101</td>\n","      <td>NaN</td>\n","      <td>1.2.276.0.7230010.3.1.2.8323329.9271.151787434...</td>\n","      <td>0</td>\n","      <td>PA</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  AccessionNumber BitsAllocated  ... StudyTime ViewPosition\n","0             NaN             8  ...         0           PA\n","1             NaN             8  ...         0           AP\n","2             NaN             8  ...         0           AP\n","3             NaN             8  ...         0           AP\n","4             NaN             8  ...         0           PA\n","\n","[5 rows x 35 columns]"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"code","metadata":{"id":"YHxmWfZzWtwI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593947541574,"user_tz":-330,"elapsed":282091,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"02aefaa9-e3a5-48b2-9302-a9e778e08412"},"source":["b.shape"],"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(26687, 35)"]},"metadata":{"tags":[]},"execution_count":44}]},{"cell_type":"code","metadata":{"id":"fwfa9j9UU5yN","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947541576,"user_tz":-330,"elapsed":282076,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":[" Entiredata = class_1_train_label_integrating.merge(b, left_on='patientId', right_on='PatientID', how='inner')"],"execution_count":45,"outputs":[]},{"cell_type":"code","metadata":{"id":"g2zEMGAdV7O6","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":530},"executionInfo":{"status":"ok","timestamp":1593947541577,"user_tz":-330,"elapsed":282067,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"df686c26-8b36-4c6f-b135-bbd70ed92082"},"source":["Entiredata.head()"],"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>patientId</th>\n","      <th>x</th>\n","      <th>y</th>\n","      <th>width</th>\n","      <th>height</th>\n","      <th>Target</th>\n","      <th>class</th>\n","      <th>AccessionNumber</th>\n","      <th>BitsAllocated</th>\n","      <th>BitsStored</th>\n","      <th>BodyPartExamined</th>\n","      <th>Columns</th>\n","      <th>ConversionType</th>\n","      <th>HighBit</th>\n","      <th>InstanceNumber</th>\n","      <th>LossyImageCompression</th>\n","      <th>LossyImageCompressionMethod</th>\n","      <th>Modality</th>\n","      <th>PatientAge</th>\n","      <th>PatientBirthDate</th>\n","      <th>PatientID</th>\n","      <th>PatientName</th>\n","      <th>PatientOrientation</th>\n","      <th>PatientSex</th>\n","      <th>PhotometricInterpretation</th>\n","      <th>PixelData</th>\n","      <th>PixelRepresentation</th>\n","      <th>PixelSpacing</th>\n","      <th>ReferringPhysicianName</th>\n","      <th>Rows</th>\n","      <th>SOPClassUID</th>\n","      <th>SOPInstanceUID</th>\n","      <th>SamplesPerPixel</th>\n","      <th>SeriesDescription</th>\n","      <th>SeriesInstanceUID</th>\n","      <th>SeriesNumber</th>\n","      <th>SpecificCharacterSet</th>\n","      <th>StudyDate</th>\n","      <th>StudyID</th>\n","      <th>StudyInstanceUID</th>\n","      <th>StudyTime</th>\n","      <th>ViewPosition</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0004cfab-14fd-4e49-80ba-63a80b6bddd6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>No Lung Opacity / Not Normal</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>CHEST</td>\n","      <td>1024</td>\n","      <td>WSD</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>ISO_10918_1</td>\n","      <td>CR</td>\n","      <td>51</td>\n","      <td>NaN</td>\n","      <td>0004cfab-14fd-4e49-80ba-63a80b6bddd6</td>\n","      <td>0004cfab-14fd-4e49-80ba-63a80b6bddd6</td>\n","      <td>NaN</td>\n","      <td>F</td>\n","      <td>MONOCHROME2</td>\n","      <td>b'\\xfe\\xff\\x00\\xe0\\x00\\x00\\x00\\x00\\xfe\\xff\\x00...</td>\n","      <td>0</td>\n","      <td>[0.14300000000000002, 0.14300000000000002]</td>\n","      <td>NaN</td>\n","      <td>1024</td>\n","      <td>1.2.840.10008.5.1.4.1.1.7</td>\n","      <td>1.2.276.0.7230010.3.1.4.8323329.28530.15178744...</td>\n","      <td>1</td>\n","      <td>view: PA</td>\n","      <td>1.2.276.0.7230010.3.1.3.8323329.28530.15178744...</td>\n","      <td>1</td>\n","      <td>ISO_IR 100</td>\n","      <td>19010101</td>\n","      <td>NaN</td>\n","      <td>1.2.276.0.7230010.3.1.2.8323329.28530.15178744...</td>\n","      <td>0</td>\n","      <td>PA</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>00313ee0-9eaa-42f4-b0ab-c148ed3241cd</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>No Lung Opacity / Not Normal</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>CHEST</td>\n","      <td>1024</td>\n","      <td>WSD</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>ISO_10918_1</td>\n","      <td>CR</td>\n","      <td>48</td>\n","      <td>NaN</td>\n","      <td>00313ee0-9eaa-42f4-b0ab-c148ed3241cd</td>\n","      <td>00313ee0-9eaa-42f4-b0ab-c148ed3241cd</td>\n","      <td>NaN</td>\n","      <td>F</td>\n","      <td>MONOCHROME2</td>\n","      <td>b'\\xfe\\xff\\x00\\xe0\\x00\\x00\\x00\\x00\\xfe\\xff\\x00...</td>\n","      <td>0</td>\n","      <td>[0.19431099999999998, 0.19431099999999998]</td>\n","      <td>NaN</td>\n","      <td>1024</td>\n","      <td>1.2.840.10008.5.1.4.1.1.7</td>\n","      <td>1.2.276.0.7230010.3.1.4.8323329.26024.15178744...</td>\n","      <td>1</td>\n","      <td>view: PA</td>\n","      <td>1.2.276.0.7230010.3.1.3.8323329.26024.15178744...</td>\n","      <td>1</td>\n","      <td>ISO_IR 100</td>\n","      <td>19010101</td>\n","      <td>NaN</td>\n","      <td>1.2.276.0.7230010.3.1.2.8323329.26024.15178744...</td>\n","      <td>0</td>\n","      <td>PA</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>00322d4d-1c29-4943-afc9-b6754be640eb</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>No Lung Opacity / Not Normal</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>CHEST</td>\n","      <td>1024</td>\n","      <td>WSD</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>ISO_10918_1</td>\n","      <td>CR</td>\n","      <td>19</td>\n","      <td>NaN</td>\n","      <td>00322d4d-1c29-4943-afc9-b6754be640eb</td>\n","      <td>00322d4d-1c29-4943-afc9-b6754be640eb</td>\n","      <td>NaN</td>\n","      <td>M</td>\n","      <td>MONOCHROME2</td>\n","      <td>b'\\xfe\\xff\\x00\\xe0\\x00\\x00\\x00\\x00\\xfe\\xff\\x00...</td>\n","      <td>0</td>\n","      <td>[0.168, 0.168]</td>\n","      <td>NaN</td>\n","      <td>1024</td>\n","      <td>1.2.840.10008.5.1.4.1.1.7</td>\n","      <td>1.2.276.0.7230010.3.1.4.8323329.11252.15178743...</td>\n","      <td>1</td>\n","      <td>view: AP</td>\n","      <td>1.2.276.0.7230010.3.1.3.8323329.11252.15178743...</td>\n","      <td>1</td>\n","      <td>ISO_IR 100</td>\n","      <td>19010101</td>\n","      <td>NaN</td>\n","      <td>1.2.276.0.7230010.3.1.2.8323329.11252.15178743...</td>\n","      <td>0</td>\n","      <td>AP</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>003d8fa0-6bf1-40ed-b54c-ac657f8495c5</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>Normal</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>CHEST</td>\n","      <td>1024</td>\n","      <td>WSD</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>ISO_10918_1</td>\n","      <td>CR</td>\n","      <td>28</td>\n","      <td>NaN</td>\n","      <td>003d8fa0-6bf1-40ed-b54c-ac657f8495c5</td>\n","      <td>003d8fa0-6bf1-40ed-b54c-ac657f8495c5</td>\n","      <td>NaN</td>\n","      <td>M</td>\n","      <td>MONOCHROME2</td>\n","      <td>b'\\xfe\\xff\\x00\\xe0\\x00\\x00\\x00\\x00\\xfe\\xff\\x00...</td>\n","      <td>0</td>\n","      <td>[0.14300000000000002, 0.14300000000000002]</td>\n","      <td>NaN</td>\n","      <td>1024</td>\n","      <td>1.2.840.10008.5.1.4.1.1.7</td>\n","      <td>1.2.276.0.7230010.3.1.4.8323329.2293.151787429...</td>\n","      <td>1</td>\n","      <td>view: PA</td>\n","      <td>1.2.276.0.7230010.3.1.3.8323329.2293.151787429...</td>\n","      <td>1</td>\n","      <td>ISO_IR 100</td>\n","      <td>19010101</td>\n","      <td>NaN</td>\n","      <td>1.2.276.0.7230010.3.1.2.8323329.2293.151787429...</td>\n","      <td>0</td>\n","      <td>PA</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>00436515-870c-4b36-a041-de91049b9ab4</td>\n","      <td>264.0</td>\n","      <td>152.0</td>\n","      <td>213.0</td>\n","      <td>379.0</td>\n","      <td>1</td>\n","      <td>Lung Opacity</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>CHEST</td>\n","      <td>1024</td>\n","      <td>WSD</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>ISO_10918_1</td>\n","      <td>CR</td>\n","      <td>32</td>\n","      <td>NaN</td>\n","      <td>00436515-870c-4b36-a041-de91049b9ab4</td>\n","      <td>00436515-870c-4b36-a041-de91049b9ab4</td>\n","      <td>NaN</td>\n","      <td>F</td>\n","      <td>MONOCHROME2</td>\n","      <td>b'\\xfe\\xff\\x00\\xe0\\x00\\x00\\x00\\x00\\xfe\\xff\\x00...</td>\n","      <td>0</td>\n","      <td>[0.139, 0.139]</td>\n","      <td>NaN</td>\n","      <td>1024</td>\n","      <td>1.2.840.10008.5.1.4.1.1.7</td>\n","      <td>1.2.276.0.7230010.3.1.4.8323329.6379.151787432...</td>\n","      <td>1</td>\n","      <td>view: AP</td>\n","      <td>1.2.276.0.7230010.3.1.3.8323329.6379.151787432...</td>\n","      <td>1</td>\n","      <td>ISO_IR 100</td>\n","      <td>19010101</td>\n","      <td>NaN</td>\n","      <td>1.2.276.0.7230010.3.1.2.8323329.6379.151787432...</td>\n","      <td>0</td>\n","      <td>AP</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                              patientId      x  ...  StudyTime  ViewPosition\n","0  0004cfab-14fd-4e49-80ba-63a80b6bddd6    NaN  ...          0            PA\n","1  00313ee0-9eaa-42f4-b0ab-c148ed3241cd    NaN  ...          0            PA\n","2  00322d4d-1c29-4943-afc9-b6754be640eb    NaN  ...          0            AP\n","3  003d8fa0-6bf1-40ed-b54c-ac657f8495c5    NaN  ...          0            PA\n","4  00436515-870c-4b36-a041-de91049b9ab4  264.0  ...          0            AP\n","\n","[5 rows x 42 columns]"]},"metadata":{"tags":[]},"execution_count":46}]},{"cell_type":"code","metadata":{"id":"dunVBIn_XZDR","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":748},"executionInfo":{"status":"ok","timestamp":1593947541580,"user_tz":-330,"elapsed":282055,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"ed2b7ff2-2a02-494e-e44b-2efa7beaf7d0"},"source":["Entiredata[\"PatientAge\"] = Entiredata[\"PatientAge\"].astype(str).astype(int)\n","print(Entiredata.dtypes)"],"execution_count":47,"outputs":[{"output_type":"stream","text":["patientId                       object\n","x                              float64\n","y                              float64\n","width                          float64\n","height                         float64\n","Target                           int64\n","class                           object\n","AccessionNumber                 object\n","BitsAllocated                   object\n","BitsStored                      object\n","BodyPartExamined                object\n","Columns                         object\n","ConversionType                  object\n","HighBit                         object\n","InstanceNumber                  object\n","LossyImageCompression           object\n","LossyImageCompressionMethod     object\n","Modality                        object\n","PatientAge                       int64\n","PatientBirthDate                object\n","PatientID                       object\n","PatientName                     object\n","PatientOrientation              object\n","PatientSex                      object\n","PhotometricInterpretation       object\n","PixelData                       object\n","PixelRepresentation             object\n","PixelSpacing                    object\n","ReferringPhysicianName          object\n","Rows                            object\n","SOPClassUID                     object\n","SOPInstanceUID                  object\n","SamplesPerPixel                 object\n","SeriesDescription               object\n","SeriesInstanceUID               object\n","SeriesNumber                    object\n","SpecificCharacterSet            object\n","StudyDate                       object\n","StudyID                         object\n","StudyInstanceUID                object\n","StudyTime                       object\n","ViewPosition                    object\n","dtype: object\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wjfk-9GnXZIm","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":296},"executionInfo":{"status":"ok","timestamp":1593947541582,"user_tz":-330,"elapsed":282039,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"574be094-5712-41c5-cb0b-adc01ca4d42b"},"source":["sns.countplot(x=\"Modality\", data=Entiredata,hue=\"Target\")"],"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f3d5dce8f28>"]},"metadata":{"tags":[]},"execution_count":48},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"99__Wm7tcGe2","colab_type":"text"},"source":["All Patients are checked with Computed radiography modality"]},{"cell_type":"code","metadata":{"id":"SpiDUhjSWy5e","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593947541584,"user_tz":-330,"elapsed":282028,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"a9320a30-a87a-43e5-815c-4d5763dc1d14"},"source":["print('BodyPartExamined` is: {}'.format(b['BodyPartExamined'].unique()[0]))"],"execution_count":49,"outputs":[{"output_type":"stream","text":["BodyPartExamined` is: CHEST\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"d80UUSCamj-N","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":297},"executionInfo":{"status":"ok","timestamp":1593947541586,"user_tz":-330,"elapsed":282016,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"1a0887bc-0843-4309-f39f-ed89e7b7ce84"},"source":["sns.boxplot(x=\"Target\", y='PatientAge', data=Entiredata)"],"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f3d5dc69cf8>"]},"metadata":{"tags":[]},"execution_count":50},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"rYPH_ROHomF3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593947541589,"user_tz":-330,"elapsed":282002,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"134bb823-774a-4015-c812-713788d33666"},"source":["print('Minimum `PatientAge` in the training dataset: {}'.format(Entiredata['PatientAge'].min()))"],"execution_count":51,"outputs":[{"output_type":"stream","text":["Minimum `PatientAge` in the training dataset: 1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2uxzeCr3ox55","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593947541591,"user_tz":-330,"elapsed":281989,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"a912cc70-3d0f-49ed-e96c-320a27399708"},"source":["print('`PatientAge` in higher side for box plot: {}'.format(Entiredata['PatientAge'].quantile(0.75) + (Entiredata['PatientAge'].quantile(0.75) - Entiredata['PatientAge'].quantile(0.25))))"],"execution_count":52,"outputs":[{"output_type":"stream","text":["`PatientAge` in higher side for box plot: 85.0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"yAJgfhPXnHn2","colab_type":"text"},"source":["There are some unique cases where patient age are above 140 but they belong to Normal or No lung opacity/Not normal class."]},{"cell_type":"code","metadata":{"id":"_W6MY8Yxr-9p","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":296},"executionInfo":{"status":"ok","timestamp":1593947543945,"user_tz":-330,"elapsed":284331,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"ddceacc5-eb69-4cf5-f411-e9dd8f2b0871"},"source":["sns.countplot(x=\"ViewPosition\", data=Entiredata,hue=\"Target\")"],"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f3d5dbdb048>"]},"metadata":{"tags":[]},"execution_count":53},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"OLeobO4cw_wq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":162},"executionInfo":{"status":"ok","timestamp":1593947543946,"user_tz":-330,"elapsed":284318,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"c36a883a-813a-4b80-c57f-6af5a831206b"},"source":["Entiredata.groupby(['ViewPosition']).count() "],"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>patientId</th>\n","      <th>x</th>\n","      <th>y</th>\n","      <th>width</th>\n","      <th>height</th>\n","      <th>Target</th>\n","      <th>class</th>\n","      <th>AccessionNumber</th>\n","      <th>BitsAllocated</th>\n","      <th>BitsStored</th>\n","      <th>BodyPartExamined</th>\n","      <th>Columns</th>\n","      <th>ConversionType</th>\n","      <th>HighBit</th>\n","      <th>InstanceNumber</th>\n","      <th>LossyImageCompression</th>\n","      <th>LossyImageCompressionMethod</th>\n","      <th>Modality</th>\n","      <th>PatientAge</th>\n","      <th>PatientBirthDate</th>\n","      <th>PatientID</th>\n","      <th>PatientName</th>\n","      <th>PatientOrientation</th>\n","      <th>PatientSex</th>\n","      <th>PhotometricInterpretation</th>\n","      <th>PixelData</th>\n","      <th>PixelRepresentation</th>\n","      <th>PixelSpacing</th>\n","      <th>ReferringPhysicianName</th>\n","      <th>Rows</th>\n","      <th>SOPClassUID</th>\n","      <th>SOPInstanceUID</th>\n","      <th>SamplesPerPixel</th>\n","      <th>SeriesDescription</th>\n","      <th>SeriesInstanceUID</th>\n","      <th>SeriesNumber</th>\n","      <th>SpecificCharacterSet</th>\n","      <th>StudyDate</th>\n","      <th>StudyID</th>\n","      <th>StudyInstanceUID</th>\n","      <th>StudyTime</th>\n","    </tr>\n","    <tr>\n","      <th>ViewPosition</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>AP</th>\n","      <td>21817</td>\n","      <td>14308</td>\n","      <td>14308</td>\n","      <td>14308</td>\n","      <td>14308</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>0</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>0</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>0</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>0</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","      <td>0</td>\n","      <td>21817</td>\n","      <td>21817</td>\n","    </tr>\n","    <tr>\n","      <th>PA</th>\n","      <td>15812</td>\n","      <td>2649</td>\n","      <td>2649</td>\n","      <td>2649</td>\n","      <td>2649</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>0</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>0</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>0</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>0</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","      <td>0</td>\n","      <td>15812</td>\n","      <td>15812</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              patientId      x      y  ...  StudyID  StudyInstanceUID  StudyTime\n","ViewPosition                           ...                                      \n","AP                21817  14308  14308  ...        0             21817      21817\n","PA                15812   2649   2649  ...        0             15812      15812\n","\n","[2 rows x 41 columns]"]},"metadata":{"tags":[]},"execution_count":54}]},{"cell_type":"code","metadata":{"id":"RF9jaQmypvQB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":301},"executionInfo":{"status":"ok","timestamp":1593947543947,"user_tz":-330,"elapsed":284301,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"daa1f1ed-59f3-4780-aaef-e6e7a605638c"},"source":["# Bifurcation of PA & AP variable\n","fig = plt.figure(figsize = (10, 6))\n","ax = fig.add_subplot(121)\n","g = (Entiredata['ViewPosition'].value_counts()\n","    .plot(kind = 'pie', autopct = '%.0f%%', \n","          labels = ['AP', 'PA'], \n","          colors = ['green', 'red'], \n","          startangle = 90, \n","          title = 'Bifurcation of ViewPosition', fontsize = 12)\n","    .set_ylabel(''))\n"],"execution_count":55,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x432 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"G7DynkUssxZv","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":264},"executionInfo":{"status":"ok","timestamp":1593947543948,"user_tz":-330,"elapsed":284285,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"ab82adef-8558-4bfd-818f-d666092eb66c"},"source":["ax = fig.add_subplot(122)\n","g = (Entiredata.loc[Entiredata['Target'] == 1, 'ViewPosition']\n","     .value_counts().sort_index(ascending = False)\n","    .plot(kind = 'pie', autopct = '%.0f%%', \n","          startangle = 90, counterclock = False, colors = ['green', 'red'], \n","          title = 'Bifurcation of ViewPosition, Pneumonia Proof', \n","          fontsize = 12)\n","    .set_ylabel(''))"],"execution_count":56,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"Nx8yKc9lui0S","colab_type":"text"},"source":["Posterior/Anterior (PA):- Meaning of PA is the X-ray is taken from back of the Patient side.\n","\n","Anterior/Posterior (AP):- Meaning of AP is the X-ray is taken from front (chest) side of the patient.\n","\n","Patients are mostly examined with AP position.\n","\n","Patients examined with AP position is having more lung opacity issue than PA.\n","\n","It is always recommended to have PA posture X-ray than AP because of several good reasons, some of the vital reasons are \n","1. It Reduces magnification of heart therefore preventing appearance of cardiomegaly. \n","\n","2. Reduces radiation dose to radiation sensitive organs such as thyroid,eyes,breasts.\n","\n","3. Visualised maximum areas of lung. etc.\n","\n","But due to health reasons, AP X-rays are taken \n","\n","84% of patients with AP view position variable have lung opacity.\n","\n","AP & PA X-rays Overall ViewPosition is 58% & 42% respectively\n","For target=1, AP having most of the view positions"]},{"cell_type":"code","metadata":{"id":"UFpm-KCg2ih8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":296},"executionInfo":{"status":"ok","timestamp":1593947543949,"user_tz":-330,"elapsed":284271,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"e02b9e1b-df9a-487d-e956-91ef28a581dd"},"source":["sns.countplot(x=\"PatientSex\", data=Entiredata,hue=\"Target\")"],"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f3d626a5940>"]},"metadata":{"tags":[]},"execution_count":57},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"STWrc03T3sBK","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":162},"executionInfo":{"status":"ok","timestamp":1593947543953,"user_tz":-330,"elapsed":284263,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}},"outputId":"8d12acc7-f9aa-4cde-bb84-b1a3a1dfe3a1"},"source":["Entiredata.groupby(['PatientSex']).count() "],"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>patientId</th>\n","      <th>x</th>\n","      <th>y</th>\n","      <th>width</th>\n","      <th>height</th>\n","      <th>Target</th>\n","      <th>class</th>\n","      <th>AccessionNumber</th>\n","      <th>BitsAllocated</th>\n","      <th>BitsStored</th>\n","      <th>BodyPartExamined</th>\n","      <th>Columns</th>\n","      <th>ConversionType</th>\n","      <th>HighBit</th>\n","      <th>InstanceNumber</th>\n","      <th>LossyImageCompression</th>\n","      <th>LossyImageCompressionMethod</th>\n","      <th>Modality</th>\n","      <th>PatientAge</th>\n","      <th>PatientBirthDate</th>\n","      <th>PatientID</th>\n","      <th>PatientName</th>\n","      <th>PatientOrientation</th>\n","      <th>PhotometricInterpretation</th>\n","      <th>PixelData</th>\n","      <th>PixelRepresentation</th>\n","      <th>PixelSpacing</th>\n","      <th>ReferringPhysicianName</th>\n","      <th>Rows</th>\n","      <th>SOPClassUID</th>\n","      <th>SOPInstanceUID</th>\n","      <th>SamplesPerPixel</th>\n","      <th>SeriesDescription</th>\n","      <th>SeriesInstanceUID</th>\n","      <th>SeriesNumber</th>\n","      <th>SpecificCharacterSet</th>\n","      <th>StudyDate</th>\n","      <th>StudyID</th>\n","      <th>StudyInstanceUID</th>\n","      <th>StudyTime</th>\n","      <th>ViewPosition</th>\n","    </tr>\n","    <tr>\n","      <th>PatientSex</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>F</th>\n","      <td>16131</td>\n","      <td>7115</td>\n","      <td>7115</td>\n","      <td>7115</td>\n","      <td>7115</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>0</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>0</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>0</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>0</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>0</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","      <td>16131</td>\n","    </tr>\n","    <tr>\n","      <th>M</th>\n","      <td>21498</td>\n","      <td>9842</td>\n","      <td>9842</td>\n","      <td>9842</td>\n","      <td>9842</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>0</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>0</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>0</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>0</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>0</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","      <td>21498</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            patientId     x     y  ...  StudyInstanceUID  StudyTime  ViewPosition\n","PatientSex                         ...                                           \n","F               16131  7115  7115  ...             16131      16131         16131\n","M               21498  9842  9842  ...             21498      21498         21498\n","\n","[2 rows x 41 columns]"]},"metadata":{"tags":[]},"execution_count":58}]},{"cell_type":"markdown","metadata":{"id":"0evrwXGM3VPX","colab_type":"text"},"source":["Out of total patients, Male patients are having more Lung opacity evidence than Female"]},{"cell_type":"code","metadata":{"id":"uuvxRMiijgma","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593947543953,"user_tz":-330,"elapsed":284250,"user":{"displayName":"Asim Nadaf","photoUrl":"","userId":"09325430508312611957"}}},"source":[""],"execution_count":58,"outputs":[]}]}